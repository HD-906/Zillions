; *** Army Chess
; *** Copyright 1998-2002 Zillions Development

; v.2.0

(version "2.0")

(define Ahighway    A11 A12 A13 A14 A15
                    A51 A52 A53 A54 A55
                    A21 A31 A41 A51
                    A15 A25 A35 A45)
(define Bhighway    B11 B12 B13 B14 B15
                    B51 B52 B53 B54 B55
                    B21 B31 B41 B51
                    B15 B25 B35 B45)
(define Chighway    C11 C12 C13 C14 C15
                    C51 C52 C53 C54 C55
                    C21 C31 C41 C51
                    C15 C25 C35 C45)
(define Dhighway    D11 D12 D13 D14 D15
                    D51 D52 D53 D54 D55
                    D21 D31 D41 D51
                    D15 D25 D35 D45)
(define begin-setup ((verify (and empty? (in-zone? myside))) add))
(define 00begin-setup ((verify (and empty? (in-zone? myside) (not-in-zone? first-rank))) add))
(define 31begin-setup ((verify (and empty? (in-zone? base-2ranks))) add))
(define 41begin-setup ((verify (and empty? (in-zone? base) (in-zone? myside))) add))
(define 00slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway))) capture add
))
(define 00shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(verify not-friend?) (if enemy? capture add else add)
))
(define 40slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal)) add)
		(if (or (piece? Bomb) (piece? Marshal)) capture add)
		(if (piece? Landmine) back capture add)
))
(define 40shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? Marshal)) capture add)
	(if (piece? Landmine) back capture add)
))
(define 39slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal) (not-piece? General)) add)
		(if (or (piece? Bomb) (piece? General)) capture add)
		(if (or (piece? Landmine) (piece? Marshal)) back capture add)
))
(define 39shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal) (not-piece? General))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? General)) capture add)
	(if (or (piece? Landmine) (piece? Marshal)) back capture add)
))
(define 38slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal) (not-piece? General) (not-piece? MajGeneral)) add)
		(if (or (piece? Bomb) (piece? MajGeneral)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General)) back capture add)
))
(define 38shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal) (not-piece? General) (not-piece? MajGeneral))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? MajGeneral)) capture add)
	(if (or (piece? Landmine) (piece? Marshal) (piece? General)) back capture add)
))
(define 37slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major) (piece? Colonel)) add)
		(if (or (piece? Bomb) (piece? Brigadier)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral)) back capture add)
))
(define 37shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major) (piece? Colonel)))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? Brigadier)) capture add)
	(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral)) back capture add)
))
(define 36slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major)) add)
		(if (or (piece? Bomb) (piece? Colonel)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier)) back capture add)
))
(define 36shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major)))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? Colonel)) capture add)
	(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier)) back capture add)
))
(define 35slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain)) add)
		(if (or (piece? Bomb) (piece? Major)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier) (piece? Colonel)) back capture add)
))
(define 35shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain)))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? Major)) capture add)
	(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier) (piece? Colonel)) back capture add)
))
(define 34slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant)) add)
		(if (or (piece? Bomb) (piece? Captain)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant) (not-piece? Captain)) back capture add)
))
(define 34shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant)))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? Captain)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant) (not-piece? Captain)) back capture add)
))
(define 33slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper)) add)
		(if (or (piece? Bomb) (piece? Lieutenant)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant)) back capture add)
))
(define 33shift ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? Ensign) (piece? Sapper)))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? Lieutenant)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant)) back capture add)
))
(define 32shift ((verify (and (not-in-zone? base) (or (not-in-zone? highway) (not-in-zone? highway $1))))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? Ensign) (piece? Landmine)))) add)
		(verify enemy?)
	(if (or (piece? Bomb) (piece? Sapper)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Landmine)) back capture add)
))
(define 32slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) (add-partial SapperSlide) $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Landmine)) add)
		(if (or (piece? Bomb) (piece? Sapper)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Landmine)) back capture add)
))
(define a32slide ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) (verify not-last-from?) (add-partial SapperSlide) $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Landmine)) add)
		(if (or (piece? Bomb) (piece? Sapper)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Landmine)) back capture add)
))
(game
   (title "Army Chess")
   (players Blue Purple)
   (turn-order  (Blue EnsignSetup) (Purple EnsignSetup)
		(Blue MineBombSetup) (Purple MineBombSetup)
		(Blue MineBombSetup) (Purple MineBombSetup)
		(Blue MineBombSetup) (Purple MineBombSetup)
		(Blue MineBombSetup) (Purple MineBombSetup)
		(Blue MineBombSetup) (Purple MineBombSetup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		(Blue Setup) (Purple Setup)
		repeat Blue Purple)
   (option "pass partial" true)
   (option "animate drops" false)
   (option "animate captures" false)
   (board
        (image "images\Army_Chess\2P_Army_Chess.bmp")
        (grid
            (start-rectangle 8 2 44 27) ; top position
            (dimensions 
                ("B6/B5/B4/B3/B2/B1/OO/A1/A2/A3/A4/A5/A6" (0 36)) ; rows
                ("5/4/3/2/1" (74 0))) ; columns
            (directions (n -1 0) (e 0 1) (s 1 0) (w 0 -1))
        )
	(kill-positions
		OO2 OO4
	)
	(links ne
		(B35 B44) (B44 B53)
		(B15 B24) (B24 B33) (B33 B42) (B42 B51)
		(B13 B22) (B22 B31)

		(A55 A44) (A44 A33) (A33 A22) (A22 A11)
		(A35 A24) (A24 A13)
		(A53 A42) (A42 A31)
	)
	(links nw
		(B11 B22) (B22 B33) (B33 B44) (B44 B55)
		(B13 B24) (B24 B35)
		(B31 B42) (B42 B53)

		(A51 A42) (A42 A33) (A33 A24) (A24 A15)
		(A53 A44) (A44 A35)
		(A31 A22) (A22 A13)
	)
	(links se
		(B55 B44) (B44 B33) (B33 B22) (B22 B11)
		(B35 B24) (B24 B13)
		(B53 B42) (B42 B31)

		(A13 A22) (A22 A31)
		(A15 A24) (A24 A33) (A33 A42) (A42 A51)
		(A35 A44) (A44 A53)
	)
	(links sw
		(B51 B42) (B42 B33) (B33 B24) (B24 B15)
		(B53 B44) (B44 B35)
		(B31 B22) (B22 B13)

		(A11 A22) (A22 A33) (A33 A44) (A44 A55)
		(A13 A24) (A24 A35)
		(A31 A42) (A42 A53)
	)
        (zone
           (name highway)
           (players Blue Purple)
           (positions (Ahighway) (Bhighway) OO1 OO3 OO5)
        )
        (zone
           (name bunker)
           (players Blue Purple)
           (positions A22 A24 A33 A42 A44 B22 B24 B33 B42 B44)
        )
        (zone
           (name base)
           (players Blue Purple)
           (positions A62 A64 B62 B64)
        )
        (zone
           (name myside)
           (players Blue)
           (positions (Ahighway) A23 A32 A34 A43 A61 A62 A63 A64 A65)
        )
        (zone
           (name myside)
           (players Purple)
           (positions (Bhighway) B23 B32 B34 B43 B61 B62 B63 B64 B65)
        )
        (zone
           (name first-rank)
           (players Blue)
           (positions A11 A12 A13 A14 A15)
        )
        (zone
           (name first-rank)
           (players Purple)
           (positions B11 B12 B13 B14 B15)
        )
        (zone
           (name base-2ranks)
           (players Blue)
           (positions A51 A52 A53 A54 A55 A61 A62 A63 A64 A65)
        )
        (zone
           (name base-2ranks)
           (players Purple)
           (positions B51 B52 B53 B54 B55 B61 B62 B63 B64 B65)
        )
   )
   (board-setup
        (Blue 
		(Marshal off 1)
		(General off 1)
		(MajGeneral off 2)
		(Brigadier off 2)
		(Colonel off 2)
		(Major off 2)
		(Captain off 3)
		(Lieutenant off 3)
		(Sapper off 3)
		(Bomb off 2)
		(Landmine off 3)
		(Ensign off 1))
        (Purple 
		(Marshal off 1)
		(General off 1)
		(MajGeneral off 2)
		(Brigadier off 2)
		(Colonel off 2)
		(Major off 2)
		(Captain off 3)
		(Lieutenant off 3)
		(Sapper off 3)
		(Bomb off 2)
		(Landmine off 3)
		(Ensign off 1))
   )
   (piece
        (name Bomb)
		(help "Sacrifice itself with any other pieces regardless their ranks")
		(image Blue "images\Army_Chess\B00.bmp"
		       Purple "images\Army_Chess\P00.bmp")
        (drops (move-type MineBombSetup) (00begin-setup))
        (moves 
               (00slide n)
               (00slide e)
               (00slide s)
               (00slide w)
               (00shift n)
               (00shift e)
               (00shift s)
               (00shift w)
               (00shift ne)
               (00shift nw)
               (00shift se)
               (00shift sw)
        )
   )
   (piece
        (name Marshal)
		(help "2nd Largest piece type")
		(image Blue "images\Army_Chess\B40.bmp"
		       Purple "images\Army_Chess\P40.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (40slide n)
               (40slide e)
               (40slide s)
               (40slide w)
               (40shift n)
               (40shift e)
               (40shift s)
               (40shift w)
               (40shift ne)
               (40shift nw)
               (40shift se)
               (40shift sw)
        )
   )
   (piece
        (name General)
		(help "3nd Largest piece type")
		(image Blue "images\Army_Chess\B39.bmp"
		       Purple "images\Army_Chess\P39.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (39slide n)
               (39slide e)
               (39slide s)
               (39slide w)
               (39shift n)
               (39shift e)
               (39shift s)
               (39shift w)
               (39shift ne)
               (39shift nw)
               (39shift se)
               (39shift sw)
        )
   )
   (piece
        (name MajGeneral)
		(help "4rd Largest piece type")
		(image Blue "images\Army_Chess\B38.bmp"
		       Purple "images\Army_Chess\P38.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (38slide n)
               (38slide e)
               (38slide s)
               (38slide w)
               (38shift n)
               (38shift e)
               (38shift s)
               (38shift w)
               (38shift ne)
               (38shift nw)
               (38shift se)
               (38shift sw)
        )
   )
   (piece
        (name Brigadier)
		(help "5th Largest piece type")
		(image Blue "images\Army_Chess\B37.bmp"
		       Purple "images\Army_Chess\P37.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (37slide n)
               (37slide e)
               (37slide s)
               (37slide w)
               (37shift n)
               (37shift e)
               (37shift s)
               (37shift w)
               (37shift ne)
               (37shift nw)
               (37shift se)
               (37shift sw)
        )
   )
   (piece
        (name Colonel)
		(help "6th Largest piece type")
		(image Blue "images\Army_Chess\B36.bmp"
		       Purple "images\Army_Chess\P36.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (36slide n)
               (36slide e)
               (36slide s)
               (36slide w)
               (36shift n)
               (36shift e)
               (36shift s)
               (36shift w)
               (36shift ne)
               (36shift nw)
               (36shift se)
               (36shift sw)
        )
   )
   (piece
        (name Major)
		(help "7th Largest piece type")
		(image Blue "images\Army_Chess\B35.bmp"
		       Purple "images\Army_Chess\P35.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (35slide n)
               (35slide e)
               (35slide s)
               (35slide w)
               (35shift n)
               (35shift e)
               (35shift s)
               (35shift w)
               (35shift ne)
               (35shift nw)
               (35shift se)
               (35shift sw)
        )
   )
   (piece
        (name Captain)
		(help "8th Largest piece type")
		(image Blue "images\Army_Chess\B34.bmp"
		       Purple "images\Army_Chess\P34.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (34slide n)
               (34slide e)
               (34slide s)
               (34slide w)
               (34shift n)
               (34shift e)
               (34shift s)
               (34shift w)
               (34shift ne)
               (34shift nw)
               (34shift se)
               (34shift sw)
        )
   )
   (piece
        (name Lieutenant)
		(help "9th Largest piece type")
		(image Blue "images\Army_Chess\B33.bmp"
		       Purple "images\Army_Chess\P33.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (33slide n)
               (33slide e)
               (33slide s)
               (33slide w)
               (33shift n)
               (33shift e)
               (33shift s)
               (33shift w)
               (33shift ne)
               (33shift nw)
               (33shift se)
               (33shift sw)
        )
   )
   (piece
        (name Sapper)
		(help "Smallest piece type, but can take Landmine and change direction on highway")
		(image Blue "images\Army_Chess\B32.bmp"
		       Purple "images\Army_Chess\P32.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (32shift n)
               (32shift e)
               (32shift s)
               (32shift w)
               (32shift ne)
               (32shift nw)
               (32shift se)
               (32shift sw)
               (32slide n)
               (32slide e)
               (32slide s)
               (32slide w)
               (move-type SapperSlide)
               (a32slide n)
               (a32slide e)
               (a32slide s)
               (a32slide w)
        )
   )
   (piece
        (name Landmine)
		(help "Largest piece type, but cannot move, and can be taken by a Sapper")
		(image Blue "images\Army_Chess\B31.bmp"
		       Purple "images\Army_Chess\P31.bmp")
        (drops (move-type MineBombSetup) (31begin-setup))
   )
   (piece
        (name Ensign)
		(help "The Royal piece, any pieces can take it")
		(image Blue "images\Army_Chess\B41.bmp"
		       Purple "images\Army_Chess\P41.bmp")
        (drops (move-type EnsignSetup) (41begin-setup))
   )

    (loss-condition (Blue Purple) (captured Ensign) )
    (loss-condition (Blue Purple) stalemated )
    (loss-condition (Blue Purple) repetition )
)
;-------------------------------------------------------------------------------------

(define 00slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? capture add else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway))) capture add
)))
(define 40slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal)) add)
		(if (or (piece? Bomb) (piece? Marshal)) capture add)
		(if (piece? Landmine) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal)) add)
		(if (or (piece? Bomb) (piece? Marshal)) capture add)
		(if (piece? Landmine) back capture add)
)))
(define 39slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal)) add)
		(if (or (piece? Bomb) (piece? Marshal)) capture add)
		(if (piece? Landmine) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal) (not-piece? General)) add)
		(if (or (piece? Bomb) (piece? General)) capture add)
		(if (or (piece? Landmine) (piece? Marshal)) back capture add)
)))
(define 38slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal) (not-piece? General) (not-piece? MajGeneral)) add)
		(if (or (piece? Bomb) (piece? MajGeneral)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? Bomb) (not-piece? Landmine) (not-piece? Marshal) (not-piece? General) (not-piece? MajGeneral)) add)
		(if (or (piece? Bomb) (piece? MajGeneral)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General)) back capture add)
)))
(define 37slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major) (piece? Colonel)) add)
		(if (or (piece? Bomb) (piece? Brigadier)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major) (piece? Colonel)) add)
		(if (or (piece? Bomb) (piece? Brigadier)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral)) back capture add)
)))
(define 36slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major)) add)
		(if (or (piece? Bomb) (piece? Colonel)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain) (piece? Major)) add)
		(if (or (piece? Bomb) (piece? Colonel)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier)) back capture add)
)))
(define 35slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain)) add)
		(if (or (piece? Bomb) (piece? Major)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier) (piece? Colonel)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant) (piece? Captain)) add)
		(if (or (piece? Bomb) (piece? Major)) capture add)
		(if (or (piece? Landmine) (piece? Marshal) (piece? General) (piece? MajGeneral) (piece? Brigadier) (piece? Colonel)) back capture add)
)))
(define 34slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant)) add)
		(if (or (piece? Bomb) (piece? Captain)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant) (not-piece? Captain)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper) (piece? Lieutenant)) add)
		(if (or (piece? Bomb) (piece? Captain)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant) (not-piece? Captain)) back capture add)
)))
(define 33slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? Ensign) (piece? Sapper)) add)
		(if (or (piece? Bomb) (piece? Lieutenant)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Sapper)) add)
		(if (or (piece? Bomb) (piece? Lieutenant)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Lieutenant)) back capture add)
)))
(define 32slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? Ensign) (piece? Landmine)) add)
		(if (or (piece? Bomb) (piece? Sapper)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Landmine)) back capture add)
	else (add-partial SapperSlide)
		$3 (while (and empty? (in-zone? highway)) (add-partial SapperSlide) $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Landmine)) add)
		(if (or (piece? Bomb) (piece? Sapper)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Landmine)) back capture add)
)))
(define a32slidej ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? Ensign) (piece? Landmine)) add)
		(if (or (piece? Bomb) (piece? Sapper)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Landmine)) back capture add)
	else (verify not-last-from?) (add-partial SapperSlide)
		$3 (while (and empty? (in-zone? highway)) (verify not-last-from?) (add-partial SapperSlide) $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? Ensign) (piece? Landmine)) add)
		(if (or (piece? Bomb) (piece? Sapper)) capture add)
		(if (and (not-piece? Bomb) (not-piece? Ensign) (not-piece? Sapper) (not-piece? Landmine)) back capture add)
)))

(variant
   (title "4P Army Chess")
   (players Blue Green Purple Orange)
   (turn-order  (Blue EnsignSetup) (Green EnsignSetup)  (Purple EnsignSetup) (Orange EnsignSetup)
		(Blue MineBombSetup) (Green MineBombSetup)  (Purple MineBombSetup) (Orange MineBombSetup)
		(Blue MineBombSetup) (Green MineBombSetup)  (Purple MineBombSetup) (Orange MineBombSetup)
		(Blue MineBombSetup) (Green MineBombSetup)  (Purple MineBombSetup) (Orange MineBombSetup)
		(Blue MineBombSetup) (Green MineBombSetup)  (Purple MineBombSetup) (Orange MineBombSetup)
		(Blue MineBombSetup) (Green MineBombSetup)  (Purple MineBombSetup) (Orange MineBombSetup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		(Blue Setup) (Green Setup)  (Purple Setup) (Orange Setup)
		repeat Blue Green Purple Orange)
   (option "pass partial" true)
   (option "pass turn" forced)
   (option "animate drops" false)
   (option "animate captures" false)
   (board
        (image "images\Army_Chess\4P_Army_Chess.bmp")
        (grid
            (start-rectangle 222 404 258 440) ; top position
            (dimensions 
                ("A1/A2/A3/A4/A5/A6" (0 37))
                ("1/2/3/4/5" (37 0)))
            (directions (n -1 0) (e 0 1) (s 1 0) (w 0 -1))
        )
        (grid
            (start-rectangle 406 369 442 405) ; top position
            (dimensions 
                ("B1/B2/B3/B4/B5/B6" (37 0))
                ("1/2/3/4/5" (0 -37)))
            (directions (w -1 0) (n 0 1) (e 1 0) (s 0 -1))
        )
        (grid
            (start-rectangle 370 186 406 222) ; top position
            (dimensions 
                ("C1/C2/C3/C4/C5/C6" (0 -37))
                ("1/2/3/4/5" (-37 0)))
            (directions (s -1 0) (w 0 1) (n 1 0) (e 0 -1))
        )
        (grid
            (start-rectangle 188 221 224 257) ; top position
            (dimensions 
                ("D1/D2/D3/D4/D5/D6" (-37 0))
                ("1/2/3/4/5" (0 37)))
            (directions (e -1 0) (s 0 1) (w 1 0) (n 0 -1))
        )
		(positions
			(CD 222 221 258 257)
			(OC 296 221 332 257)
			(BC 370 221 406 257)
			(OD 222 295 258 331)
			(OO 296 295 332 331)
			(OB 370 295 406 331)
			(AD 222 369 258 405) 
			(OA 296 369 332 405)
			(AB 370 369 406 405)
		)
	(links ne
		(A55 A44) (A44 A33) (A33 A22) (A22 A11)
		(A35 A24) (A24 A13)
		(A53 A42) (A42 A31)

		(B55 B44) (B44 B33) (B33 B22) (B22 B11)
		(B35 B24) (B24 B13)
		(B53 B42) (B42 B31)

		(C55 C44) (C44 C33) (C33 C22) (C22 C11)
		(C35 C24) (C24 C13)
		(C53 C42) (C42 C31)

		(D55 D44) (D44 D33) (D33 D22) (D22 D11)
		(D35 D24) (D24 D13)
		(D53 D42) (D42 D31)
	)
	(links nw
		(A51 A42) (A42 A33) (A33 A24) (A24 A15)
		(A53 A44) (A44 A35)
		(A31 A22) (A22 A13)

		(B51 B42) (B42 B33) (B33 B24) (B24 B15)
		(B53 B44) (B44 B35)
		(B31 B22) (B22 B13)

		(C51 C42) (C42 C33) (C33 C24) (C24 C15)
		(C53 C44) (C44 C35)
		(C31 C22) (C22 C13)

		(D51 D42) (D42 D33) (D33 D24) (D24 D15)
		(D53 D44) (D44 D35)
		(D31 D22) (D22 D13)
	)
	(links se
		(A13 A22) (A22 A31)
		(A15 A24) (A24 A33) (A33 A42) (A42 A51)
		(A35 A44) (A44 A53)

		(B13 B22) (B22 B31)
		(B15 B24) (B24 B33) (B33 B42) (B42 B51)
		(B35 B44) (B44 B53)

		(C13 C22) (C22 C31)
		(C15 C24) (C24 C33) (C33 C42) (C42 C51)
		(C35 C44) (C44 C53)

		(D13 D22) (D22 D31)
		(D15 D24) (D24 D33) (D33 D42) (D42 D51)
		(D35 D44) (D44 D53)
	)
	(links sw
		(A11 A22) (A22 A33) (A33 A44) (A44 A55)
		(A13 A24) (A24 A35)
		(A31 A42) (A42 A53)

		(B11 B22) (B22 B33) (B33 B44) (B44 B55)
		(B13 B24) (B24 B35)
		(B31 B42) (B42 B53)

		(C11 C22) (C22 C33) (C33 C44) (C44 C55)
		(C13 C24) (C24 C35)
		(C31 C42) (C42 C53)

		(D11 D22) (D22 D33) (D33 D44) (D44 D55)
		(D13 D24) (D24 D35)
		(D31 D42) (D42 D53)
	)
	(links Anw
		(A11 D15)
	)
	(links Ane
		(A15 B11)
	)
	(links Bnw
		(B15 C11)
	)
	(links Bsw
		(B11 A15)
	)
	(links Csw
		(C15 D11)
	)
	(links Cse
		(C11 B15)
	)
	(links Dse
		(D15 A11)
	)
	(links Dne
		(D11 C15)
	)
	(links n
		(AD OD) (OD CD)
		(OA OO) (OO OC)
		(AB OB) (OB BC)
		(A11 AD) (A13 OA) (A15 AB)
		(CD C15) (OC C13) (BC C11)
	)
	(links e
		(CD OC) (OC BC)
		(OD OO) (OO OB)
		(AD OA) (OA AB)
		(D11 CD) (D13 OD) (D15 AD)
		(BC B15) (OB B13) (AB B11)
	)
	(links s
		(CD OD) (OD AD)
		(OC OO) (OO OA)
		(BC OB) (OB AB)
		(C11 BC) (C13 OC) (C15 CD)
		(AB A15) (OA A13) (AD A11)
	)
	(links w
		(BC OC) (OC CD)
		(OB OO) (OO OD)
		(AB OA) (OA AD)
		(B11 AB) (B13 OB) (B15 BC)
		(AD D15) (OD D13) (CD D11)
	)
        (zone
           (name highway)
           (players Blue Green Purple Orange)
           (positions (Ahighway) (Bhighway) (Chighway) (Dhighway) AB BC CD AD OA OB OC OD OO)
        )
        (zone
           (name bunker)
           (players Blue Green Purple Orange)
           (positions A22 A24 A33 A42 A44 B22 B24 B33 B42 B44 C22 C24 C33 C42 C44 D22 D24 D33 D42 D44)
        )
        (zone
           (name base)
           (players Blue Green Purple Orange)
           (positions A62 A64 B62 B64 C62 C64 D62 D64)
        )
        (zone
           (name junction)
           (players Blue Green Purple Orange)
           (positions A11 A15 B11 B15 C11 C15 D11 D15)
        )
        (zone
           (name myside)
           (players Blue)
           (positions (Ahighway) A23 A32 A34 A43 A61 A62 A63 A64 A65)
        )
        (zone
           (name myside)
           (players Green)
           (positions (Bhighway) B23 B32 B34 B43 B61 B62 B63 B64 B65)
        )
        (zone
           (name myside)
           (players Purple)
           (positions (Chighway) C23 C32 C34 C43 C61 C62 C63 C64 C65)
        )
        (zone
           (name myside)
           (players Orange)
           (positions (Dhighway) D23 D32 D34 D43 D61 D62 D63 D64 D65)
        )
        (zone
           (name first-rank)
           (players Blue)
           (positions A11 A12 A13 A14 A15)
        )
        (zone
           (name first-rank)
           (players Green)
           (positions B11 B12 B13 B14 B15)
        )
        (zone
           (name first-rank)
           (players Purple)
           (positions C11 C12 C13 C14 C15)
        )
        (zone
           (name first-rank)
           (players Orange)
           (positions D11 D12 D13 D14 D15)
        )
        (zone
           (name base-2ranks)
           (players Blue)
           (positions A51 A52 A53 A54 A55 A61 A62 A63 A64 A65)
        )
        (zone
           (name base-2ranks)
           (players Green)
           (positions B51 B52 B53 B54 B55 B61 B62 B63 B64 B65)
        )
        (zone
           (name base-2ranks)
           (players Purple)
           (positions C51 C52 C53 C54 C55 C61 C62 C63 C64 C65)
        )
        (zone
           (name base-2ranks)
           (players Orange)
           (positions D51 D52 D53 D54 D55 D61 D62 D63 D64 D65)
        )
   )
   (board-setup
        (Blue 
		(Marshal off 1)
		(General off 1)
		(MajGeneral off 2)
		(Brigadier off 2)
		(Colonel off 2)
		(Major off 2)
		(Captain off 3)
		(Lieutenant off 3)
		(Sapper off 3)
		(Bomb off 2)
		(Landmine off 3)
		(Ensign off 1))
        (Green 
		(Marshal off 1)
		(General off 1)
		(MajGeneral off 2)
		(Brigadier off 2)
		(Colonel off 2)
		(Major off 2)
		(Captain off 3)
		(Lieutenant off 3)
		(Sapper off 3)
		(Bomb off 2)
		(Landmine off 3)
		(Ensign off 1))
        (Purple 
		(Marshal off 1)
		(General off 1)
		(MajGeneral off 2)
		(Brigadier off 2)
		(Colonel off 2)
		(Major off 2)
		(Captain off 3)
		(Lieutenant off 3)
		(Sapper off 3)
		(Bomb off 2)
		(Landmine off 3)
		(Ensign off 1))
        (Orange 
		(Marshal off 1)
		(General off 1)
		(MajGeneral off 2)
		(Brigadier off 2)
		(Colonel off 2)
		(Major off 2)
		(Captain off 3)
		(Lieutenant off 3)
		(Sapper off 3)
		(Bomb off 2)
		(Landmine off 3)
		(Ensign off 1))
   )
   (piece
        (name Bomb)
		(help "Sacrifice itself with any other pieces regardless their ranks")
		(image Blue "images\Army_Chess\B00.bmp"
		       Green "images\Army_Chess\G00.bmp"
		       Purple "images\Army_Chess\P00.bmp"
		       Orange "images\Army_Chess\O00.bmp")
        (drops (move-type MineBombSetup) (00begin-setup))
        (moves 
               (00slidej n Ane e)
               (00slidej n Anw w)
               (00slidej e Dne n)
               (00slidej e Dse s)
               (00slidej s Cse e)
               (00slidej s Csw w)
               (00slidej w Bnw n)
               (00slidej w Bsw s)
               (00slide n)
               (00slide e)
               (00slide s)
               (00slide w)
               (00shift n)
               (00shift e)
               (00shift s)
               (00shift w)
               (00shift ne)
               (00shift nw)
               (00shift se)
               (00shift sw)
        )
   )
   (piece
        (name Marshal)
		(help "2nd Largest piece type")
		(image Blue "images\Army_Chess\B40.bmp"
		       Green "images\Army_Chess\G40.bmp"
		       Purple "images\Army_Chess\P40.bmp"
		       Orange "images\Army_Chess\O40.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (40slidej n Ane e)
               (40slidej n Anw w)
               (40slidej e Dne n)
               (40slidej e Dse s)
               (40slidej s Cse e)
               (40slidej s Csw w)
               (40slidej w Bnw n)
               (40slidej w Bsw s)
               (40slide n)
               (40slide e)
               (40slide s)
               (40slide w)
               (40shift n)
               (40shift e)
               (40shift s)
               (40shift w)
               (40shift ne)
               (40shift nw)
               (40shift se)
               (40shift sw)
        )
   )
   (piece
        (name General)
		(help "3nd Largest piece type")
		(image Blue "images\Army_Chess\B39.bmp"
		       Green "images\Army_Chess\G39.bmp"
		       Purple "images\Army_Chess\P39.bmp"
		       Orange "images\Army_Chess\O39.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (39slidej n Ane e)
               (39slidej n Anw w)
               (39slidej e Dne n)
               (39slidej e Dse s)
               (39slidej s Cse e)
               (39slidej s Csw w)
               (39slidej w Bnw n)
               (39slidej w Bsw s)
               (39slide n)
               (39slide e)
               (39slide s)
               (39slide w)
               (39shift n)
               (39shift e)
               (39shift s)
               (39shift w)
               (39shift ne)
               (39shift nw)
               (39shift se)
               (39shift sw)
        )
   )
   (piece
        (name MajGeneral)
		(help "4rd Largest piece type")
		(image Blue "images\Army_Chess\B38.bmp"
		       Green "images\Army_Chess\G38.bmp"
		       Purple "images\Army_Chess\P38.bmp"
		       Orange "images\Army_Chess\O38.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (38slidej n Ane e)
               (38slidej n Anw w)
               (38slidej e Dne n)
               (38slidej e Dse s)
               (38slidej s Cse e)
               (38slidej s Csw w)
               (38slidej w Bnw n)
               (38slidej w Bsw s)
               (38slide n)
               (38slide e)
               (38slide s)
               (38slide w)
               (38shift n)
               (38shift e)
               (38shift s)
               (38shift w)
               (38shift ne)
               (38shift nw)
               (38shift se)
               (38shift sw)
        )
   )
   (piece
        (name Brigadier)
		(help "5th Largest piece type")
		(image Blue "images\Army_Chess\B37.bmp"
		       Green "images\Army_Chess\G37.bmp"
		       Purple "images\Army_Chess\P37.bmp"
		       Orange "images\Army_Chess\O37.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (37slidej n Ane e)
               (37slidej n Anw w)
               (37slidej e Dne n)
               (37slidej e Dse s)
               (37slidej s Cse e)
               (37slidej s Csw w)
               (37slidej w Bnw n)
               (37slidej w Bsw s)
               (37slide n)
               (37slide e)
               (37slide s)
               (37slide w)
               (37shift n)
               (37shift e)
               (37shift s)
               (37shift w)
               (37shift ne)
               (37shift nw)
               (37shift se)
               (37shift sw)
        )
   )
   (piece
        (name Colonel)
		(help "6th Largest piece type")
		(image Blue "images\Army_Chess\B36.bmp"
		       Green "images\Army_Chess\G36.bmp"
		       Purple "images\Army_Chess\P36.bmp"
		       Orange "images\Army_Chess\O36.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (36slidej n Ane e)
               (36slidej n Anw w)
               (36slidej e Dne n)
               (36slidej e Dse s)
               (36slidej s Cse e)
               (36slidej s Csw w)
               (36slidej w Bnw n)
               (36slidej w Bsw s)
               (36slide n)
               (36slide e)
               (36slide s)
               (36slide w)
               (36shift n)
               (36shift e)
               (36shift s)
               (36shift w)
               (36shift ne)
               (36shift nw)
               (36shift se)
               (36shift sw)
        )
   )
   (piece
        (name Major)
		(help "7th Largest piece type")
		(image Blue "images\Army_Chess\B35.bmp"
		       Green "images\Army_Chess\G35.bmp"
		       Purple "images\Army_Chess\P35.bmp"
		       Orange "images\Army_Chess\O35.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (35slidej n Ane e)
               (35slidej n Anw w)
               (35slidej e Dne n)
               (35slidej e Dse s)
               (35slidej s Cse e)
               (35slidej s Csw w)
               (35slidej w Bnw n)
               (35slidej w Bsw s)
               (35slide n)
               (35slide e)
               (35slide s)
               (35slide w)
               (35shift n)
               (35shift e)
               (35shift s)
               (35shift w)
               (35shift ne)
               (35shift nw)
               (35shift se)
               (35shift sw)
        )
   )
   (piece
        (name Captain)
		(help "8th Largest piece type")
		(image Blue "images\Army_Chess\B34.bmp"
		       Green "images\Army_Chess\G34.bmp"
		       Purple "images\Army_Chess\P34.bmp"
		       Orange "images\Army_Chess\O34.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (34slidej n Ane e)
               (34slidej n Anw w)
               (34slidej e Dne n)
               (34slidej e Dse s)
               (34slidej s Cse e)
               (34slidej s Csw w)
               (34slidej w Bnw n)
               (34slidej w Bsw s)
               (34slide n)
               (34slide e)
               (34slide s)
               (34slide w)
               (34shift n)
               (34shift e)
               (34shift s)
               (34shift w)
               (34shift ne)
               (34shift nw)
               (34shift se)
               (34shift sw)
        )
   )
   (piece
        (name Lieutenant)
		(help "9th Largest piece type")
		(image Blue "images\Army_Chess\B33.bmp"
		       Green "images\Army_Chess\G33.bmp"
		       Purple "images\Army_Chess\P33.bmp"
		       Orange "images\Army_Chess\O33.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (33slidej n Ane e)
               (33slidej n Anw w)
               (33slidej e Dne n)
               (33slidej e Dse s)
               (33slidej s Cse e)
               (33slidej s Csw w)
               (33slidej w Bnw n)
               (33slidej w Bsw s)
               (33slide n)
               (33slide e)
               (33slide s)
               (33slide w)
               (33shift n)
               (33shift e)
               (33shift s)
               (33shift w)
               (33shift ne)
               (33shift nw)
               (33shift se)
               (33shift sw)
        )
   )
   (piece
        (name Sapper)
		(help "Smallest piece type, but can take Landmine and change direction on highway")
		(image Blue "images\Army_Chess\B32.bmp"
		       Green "images\Army_Chess\G32.bmp"
		       Purple "images\Army_Chess\P32.bmp"
		       Orange "images\Army_Chess\O32.bmp")
        (drops (move-type Setup) (begin-setup))
        (moves 
               (32slidej n Ane e)
               (32slidej n Anw w)
               (32slidej e Dne n)
               (32slidej e Dse s)
               (32slidej s Cse e)
               (32slidej s Csw w)
               (32slidej w Bnw n)
               (32slidej w Bsw s)
               (32slide n)
               (32slide e)
               (32slide s)
               (32slide w)
               (32shift n)
               (32shift e)
               (32shift s)
               (32shift w)
               (32shift ne)
               (32shift nw)
               (32shift se)
               (32shift sw)
               (move-type SapperSlide)
               (a32slidej n Ane e)
               (a32slidej n Anw w)
               (a32slidej e Dne n)
               (a32slidej e Dse s)
               (a32slidej s Cse e)
               (a32slidej s Csw w)
               (a32slidej w Bnw n)
               (a32slidej w Bsw s)
               (a32slide n)
               (a32slide e)
               (a32slide s)
               (a32slide w)
        )
   )
   (piece
        (name Landmine)
		(help "Largest piece type, but cannot move, and can be taken by a Sapper")
		(image Blue "images\Army_Chess\B31.bmp"
		       Green "images\Army_Chess\G31.bmp"
		       Purple "images\Army_Chess\P31.bmp"
		       Orange "images\Army_Chess\O31.bmp")
        (drops (move-type MineBombSetup) (31begin-setup))
   )
   (piece
        (name Ensign)
		(help "The Royal piece, any pieces can take it")
		(image Blue "images\Army_Chess\B41.bmp"
		       Green "images\Army_Chess\G41.bmp"
		       Purple "images\Army_Chess\P41.bmp"
		       Orange "images\Army_Chess\O41.bmp")
        (drops (move-type EnsignSetup) (41begin-setup))
   )

    (loss-condition (Blue Green Purple Orange) (captured Ensign) )
    (loss-condition (Blue Green Purple Orange) repetition )
)
;-------------------------------------------------------------------------------------
(define kill
	mark D65
	(while (on-board? next)
		(if
			(and enemy? (or (piece? $1Marshal) (piece? $1General) (piece? $1MajGeneral) (piece? $1Brigadier) (piece? $1Colonel) (piece? $1Major)
				(piece? $1Captain) (piece? $1Lieutenant) (piece? $1Sapper) (piece? $1Landmine) (piece? $1Bomb)
			)) capture
		) next
	)
	(if
		(and enemy? (or (piece? $1Marshal) (piece? $1General) (piece? $1MajGeneral) (piece? $1Brigadier) (piece? $1Colonel) (piece? $1Major)
			(piece? $1Captain) (piece? $1Lieutenant) (piece? $1Sapper) (piece? $1Landmine) (piece? $1Bomb)
		)) capture
	) back
)
(define begin-setup1 ((verify (and empty? (in-zone? 1myside))) add))
(define 00begin-setup1 ((verify (and empty? (in-zone? 1myside) (not-in-zone? 1first-rank))) add))
(define 31begin-setup1 ((verify (and empty? (in-zone? 1base-2ranks))) add))
(define 41begin-setup1 ((verify (and empty? (in-zone? base) (in-zone? 1myside))) add))
(define begin-setup2 ((verify (and empty? (in-zone? 2myside))) add))
(define 00begin-setup2 ((verify (and empty? (in-zone? 2myside) (not-in-zone? 2first-rank))) add))
(define 31begin-setup2 ((verify (and empty? (in-zone? 2base-2ranks))) add))
(define 41begin-setup2 ((verify (and empty? (in-zone? base) (in-zone? 2myside))) add))
(define 00slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy?  (not-piece? 1Ensign) (not-piece? 2Ensign) (in-zone? highway))) capture add
))
(define 00shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(verify not-friend?) (if (and enemy? (not-piece? 1Ensign) (not-piece? 2Ensign)) capture add else add)
	(if (piece? 1Ensign) (kill 1) capture add)
	(if (piece? 2Ensign) (kill 2) capture add)
))
(define 40slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Ensign) (not-piece? 2Ensign) (not-piece? 1Marshal) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal)) add)
		(if (or (piece? 1Bomb) (piece? 1Marshal)) capture add)
		(if (or (piece? 1Landmine)) back capture add)
		(if (or (piece? 2Bomb) (piece? 2Marshal)) capture add)
		(if (or (piece? 2Landmine)) back capture add)
))
(define 40shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 1Ensign) (not-piece? 2Ensign))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1Marshal)) capture add)
	(if (or (piece? 1Landmine)) back capture add)
	(if (or (piece? 2Bomb) (piece? 2Marshal)) capture add)
	(if (or (piece? 2Landmine)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 39slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 1Ensign) (not-piece? 2Ensign)) add)
		(if (or (piece? 1Bomb) (piece? 1General)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal)) back capture add)
		(if (or (piece? 2Bomb) (piece? 2General)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal)) back capture add)
))
(define 39shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 1Ensign) (not-piece? 2Ensign))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1General)) capture add)
	(if (or (piece? 1Landmine) (piece? 1Marshal)) back capture add)
	(if (or (piece? 2Bomb) (piece? 2General)) capture add)
	(if (or (piece? 2Landmine) (piece? 2Marshal)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 38slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 1MajGeneral) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 2MajGeneral) (not-piece? 1Ensign) (not-piece? 2Ensign)) add)
		(if (or (piece? 1Bomb) (piece? 1MajGeneral)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General)) back capture add)
		(if (or (piece? 2Bomb) (piece? 2MajGeneral)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General)) back capture add)
))
(define 38shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 1MajGeneral) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 2MajGeneral)(not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 2MajGeneral) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 2MajGeneral) (not-piece? 1Ensign) (not-piece? 2Ensign))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1MajGeneral) (piece? 2Bomb) (piece? 2MajGeneral)) capture add)
	(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 2Landmine) (piece? 2Marshal) (piece? 2General)) back capture add)
	(if (or (piece? 2Bomb) (piece? 2MajGeneral) (piece? 2Bomb) (piece? 2MajGeneral)) capture add)
	(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2Landmine) (piece? 2Marshal) (piece? 2General)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 37slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major) (piece? 1Colonel) (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major) (piece? 2Colonel)) add)
		(if (or (piece? 1Bomb) (piece? 1Brigadier) (piece? 2Bomb) (piece? 2Brigadier)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral)) back capture add)
		(if (or (piece? 2Ensign) (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major) (piece? 2Colonel) (piece? 2Ensign) (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major) (piece? 2Colonel)) add)
		(if (or (piece? 2Bomb) (piece? 2Brigadier) (piece? 2Bomb) (piece? 2Brigadier)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral)) back capture add)
))
(define 37shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major) (piece? 1Colonel)))) add)
	(if (or empty? (and enemy? (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major) (piece? 2Colonel)))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1Brigadier)) capture add)
	(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral)) back capture add)
	(if (or (piece? 2Bomb) (piece? 2Brigadier)) capture add)
	(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 36slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major)) add)
		(if (or (piece? 1Bomb) (piece? 1Colonel)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major)) add)
		(if (or (piece? 2Bomb) (piece? 2Colonel)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier)) back capture add)
))
(define 36shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major)))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1Colonel)) capture add)
	(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier)) back capture add)
	(if (or empty? (and enemy? (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major)))) add)
		(verify enemy?)
	(if (or (piece? 2Bomb) (piece? 2Colonel)) capture add)
	(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 35slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain)) add)
		(if (or (piece? 1Bomb) (piece? 1Major)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier) (piece? 1Colonel)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain)) add)
		(if (or (piece? 2Bomb) (piece? 2Major)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier) (piece? 2Colonel)) back capture add)
))
(define 35shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain)))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1Major)) capture add)
	(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier) (piece? 1Colonel)) back capture add)
	(if (or (piece? 2Bomb) (piece? 2Major)) capture add)
	(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier) (piece? 2Colonel)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 34slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant)) add)
		(if (or (piece? 1Bomb) (piece? 1Captain)) capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant)) add)
		(if (or (piece? 2Bomb) (piece? 2Captain)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 1Captain) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant) (not-piece? 2Captain)) back capture add)
))
(define 34shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 2Sapper) (piece? 2Lieutenant)))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1Captain)) capture add)
	(if (or (piece? 2Bomb) (piece? 2Captain)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 1Captain) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant) (not-piece? 2Captain)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 33slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) add $1)
	(verify (and enemy? (in-zone? highway)))
		(if (piece? 1Sapper) add)
		(if (or (piece? 1Bomb) (piece? 1Lieutenant)) capture add)
		(if (piece? 2Sapper) add)
		(if (or (piece? 2Bomb) (piece? 2Lieutenant)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant)) back capture add)
))
(define 33shift1 ((verify (not-in-zone? base))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? 1Sapper) (piece? 2Sapper)))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1Lieutenant)) capture add)
	(if (or (piece? 2Bomb) (piece? 2Lieutenant)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 32shift1 ((verify (and (not-in-zone? base) (or (not-in-zone? highway) (not-in-zone? highway $1))))
	$1 (verify (or empty? (not-in-zone? bunker)))
	(if (or empty? (and enemy? (or (piece? 1Landmine) (piece? 2Landmine)))) add)
		(verify enemy?)
	(if (or (piece? 1Bomb) (piece? 1Sapper)) capture add)
	(if (or (piece? 2Bomb) (piece? 2Sapper)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Landmine) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Landmine)) back capture add)
	(if (piece? 1Ensign) (kill 1) add)
	(if (piece? 2Ensign) (kill 2) add)
))
(define 32slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) (add-partial SapperSlide) $1)
	(verify (and enemy? (in-zone? highway)))
		(if (piece? 1Landmine) add)
		(if (or (piece? 1Bomb) (piece? 1Sapper)) capture add)
		(if (piece? 2Landmine) add)
		(if (or (piece? 2Bomb) (piece? 2Sapper)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Landmine) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Landmine)) back capture add)
))
(define a32slide1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway)) (verify not-last-from?) (add-partial SapperSlide) $1)
	(verify (and enemy? (in-zone? highway)))
		(if (piece? 1Landmine) add)
		(if (or (piece? 1Bomb) (piece? 1Sapper)) capture add)
		(if (piece? 2Landmine) add)
		(if (or (piece? 2Bomb) (piece? 2Sapper)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Landmine) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Landmine)) back capture add)
))
(define 00slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if (and enemy? (not-piece? 1Ensign) (not-piece? 2Ensign)) capture add else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (not-piece? 1Ensign) (not-piece? 2Ensign) (in-zone? highway))) capture add
)))
(define 40slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (and (not-piece? 1Ensign) (not-piece? 2Ensign) (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal)) add)
		(if (or (piece? 1Bomb) (piece? 1Marshal)) capture add)
		(if (or (piece? 2Bomb) (piece? 2Marshal)) capture add)
		(if (or (piece? 1Landmine) (piece? 2Landmine)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? 1Ensign) (not-piece? 2Ensign) (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal)) add)
		(if (or (piece? 1Bomb) (piece? 1Marshal)) capture add)
		(if (or (piece? 2Bomb) (piece? 2Marshal)) capture add)
		(if (or (piece? 1Landmine) (piece? 2Landmine)) back capture add)
)))
(define 39slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (and (not-piece? 1Ensign) (not-piece? 2Ensign) (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General)) add)
		(if (or (piece? 1Bomb) (piece? 1General)) capture add)
		(if (or (piece? 2Bomb) (piece? 2General)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? 1Ensign) (not-piece? 2Ensign) (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General)) add)
		(if (or (piece? 1Bomb) (piece? 1General)) capture add)
		(if (or (piece? 2Bomb) (piece? 2General)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal)) back capture add)
)))
(define 38slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (and (not-piece? 1Ensign) (not-piece? 2Ensign) (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 1MajGeneral) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 2MajGeneral)) add)
		(if (or (piece? 1Bomb) (piece? 1MajGeneral)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General)) back capture add)
		(if (or (piece? 2Bomb) (piece? 2MajGeneral)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (and (not-piece? 1Ensign) (not-piece? 2Ensign) (not-piece? 1Bomb) (not-piece? 1Landmine) (not-piece? 1Marshal) (not-piece? 1General) (not-piece? 1MajGeneral) (not-piece? 2Bomb) (not-piece? 2Landmine) (not-piece? 2Marshal) (not-piece? 2General) (not-piece? 2MajGeneral)) add)
		(if (or (piece? 1Bomb) (piece? 1MajGeneral)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General)) back capture add)
		(if (or (piece? 2Bomb) (piece? 2MajGeneral)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General)) back capture add)
)))
(define 37slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major) (piece? 1Colonel)) add)
		(if (or (piece? 1Bomb) (piece? 1Brigadier)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major) (piece? 2Colonel)) add)
		(if (or (piece? 2Bomb) (piece? 2Brigadier)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major) (piece? 1Colonel)) add)
		(if (or (piece? 1Bomb) (piece? 1Brigadier)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major) (piece? 2Colonel)) add)
		(if (or (piece? 2Bomb) (piece? 2Brigadier)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral)) back capture add)
)))
(define 36slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major)) add)
		(if (or (piece? 1Bomb) (piece? 1Colonel)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major)) add)
		(if (or (piece? 2Bomb) (piece? 2Colonel)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain) (piece? 1Major)) add)
		(if (or (piece? 1Bomb) (piece? 1Colonel)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain) (piece? 2Major)) add)
		(if (or (piece? 2Bomb) (piece? 2Colonel)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier)) back capture add)
)))
(define 35slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain)) add)
		(if (or (piece? 1Bomb) (piece? 1Major)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier) (piece? 1Colonel)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain)) add)
		(if (or (piece? 2Bomb) (piece? 2Major)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier) (piece? 2Colonel)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant) (piece? 1Captain)) add)
		(if (or (piece? 1Bomb) (piece? 1Major)) capture add)
		(if (or (piece? 1Landmine) (piece? 1Marshal) (piece? 1General) (piece? 1MajGeneral) (piece? 1Brigadier) (piece? 1Colonel)) back capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant) (piece? 2Captain)) add)
		(if (or (piece? 2Bomb) (piece? 2Major)) capture add)
		(if (or (piece? 2Landmine) (piece? 2Marshal) (piece? 2General) (piece? 2MajGeneral) (piece? 2Brigadier) (piece? 2Colonel)) back capture add)
)))
(define 34slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (or (piece? 1Sapper) (piece? 1Lieutenant)) add)
		(if (or (piece? 1Bomb) (piece? 1Captain)) capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant)) add)
		(if (or (piece? 2Bomb) (piece? 2Captain)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 1Captain) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant) (not-piece? 2Captain)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (or (piece? 1Sapper) (piece? 1Lieutenant)) add)
		(if (or (piece? 1Bomb) (piece? 1Captain)) capture add)
		(if (or (piece? 2Sapper) (piece? 2Lieutenant)) add)
		(if (or (piece? 2Bomb) (piece? 2Captain)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 1Captain) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant) (not-piece? 2Captain)) back capture add)
)))
(define 33slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (piece? 1Sapper) add)
		(if (or (piece? 1Bomb) (piece? 1Lieutenant)) capture add)
		(if (piece? 2Sapper) add)
		(if (or (piece? 2Bomb) (piece? 2Lieutenant)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant)) back capture add)
	else add
		$3 (while (and empty? (in-zone? highway)) add $3)
	(verify (and enemy? (in-zone? highway)))
		(if (piece? 1Sapper) add)
		(if (or (piece? 1Bomb) (piece? 1Lieutenant)) capture add)
		(if (piece? 2Sapper) add)
		(if (or (piece? 2Bomb) (piece? 2Lieutenant)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Lieutenant) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Lieutenant)) back capture add)
)))
(define 32slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (piece? 1Landmine) add)
		(if (or (piece? 1Bomb) (piece? 1Sapper)) capture add)
		(if (piece? 2Landmine) add)
		(if (or (piece? 2Bomb) (piece? 2Sapper)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Landmine) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Landmine)) back capture add)
	else (add-partial SapperSlide)
		$3 (while (and empty? (in-zone? highway)) (add-partial SapperSlide) $3)
	(verify (and enemy? (in-zone? highway)))
		(if (piece? 1Landmine) add)
		(if (or (piece? 1Bomb) (piece? 1Sapper)) capture add)
		(if (piece? 2Landmine) add)
		(if (or (piece? 2Bomb) (piece? 2Sapper)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Landmine) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Landmine)) back capture add)
)))
(define a32slidej1 ((verify (not-in-zone? base))
	(verify (in-zone? highway))
		$1 (while (and empty? (in-zone? highway) (not-in-zone? junction (opposite $1))) $1) (opposite $1)
	(verify (and (in-zone? junction) (not-friend? $2))) $2
	(if enemy? 
		(if (piece? 1Landmine) add)
		(if (or (piece? 1Bomb) (piece? 1Sapper)) capture add)
		(if (piece? 2Landmine) add)
		(if (or (piece? 2Bomb) (piece? 2Sapper)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Landmine) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Landmine)) back capture add)
	else (verify not-last-from?) (add-partial SapperSlide)
		$3 (while (and empty? (in-zone? highway)) (verify not-last-from?) (add-partial SapperSlide) $3)
	(verify (and enemy? (in-zone? highway)))
		(if (piece? 1Landmine) add)
		(if (or (piece? 1Bomb) (piece? 1Sapper)) capture add)
		(if (piece? 2Landmine) add)
		(if (or (piece? 2Bomb) (piece? 2Sapper)) capture add)
		(if (and (not-piece? 1Bomb) (not-piece? 1Ensign) (not-piece? 1Sapper) (not-piece? 1Landmine) (not-piece? 2Bomb) (not-piece? 2Ensign) (not-piece? 2Sapper) (not-piece? 2Landmine)) back capture add)
)))

(variant
   (title "2-2P Army Chess")
   (players One Two)
   (turn-order  (One 1EnsignSetup) (Two 1EnsignSetup)  (One 2EnsignSetup) (Two 2EnsignSetup)
		(One 1MineBombSetup) (Two 1MineBombSetup)  (One 2MineBombSetup) (Two 2MineBombSetup)
		(One 1MineBombSetup) (Two 1MineBombSetup)  (One 2MineBombSetup) (Two 2MineBombSetup)
		(One 1MineBombSetup) (Two 1MineBombSetup)  (One 2MineBombSetup) (Two 2MineBombSetup)
		(One 1MineBombSetup) (Two 1MineBombSetup)  (One 2MineBombSetup) (Two 2MineBombSetup)
		(One 1MineBombSetup) (Two 1MineBombSetup)  (One 2MineBombSetup) (Two 2MineBombSetup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		(One 1Setup) (Two 1Setup)  (One 2Setup) (Two 2Setup)
		repeat (One 1Move) (Two 1Move)  (One 2Move) (Two 2Move))
   (option "pass partial" true)
   (option "include off-pieces" true)
   (option "pass turn" forced)
   (option "animate drops" false)
   (option "animate captures" false)
   (board
        (image "images\Army_Chess\4P_Army_Chess.bmp")
        (grid
            (start-rectangle 222 404 258 440) ; top position
            (dimensions 
                ("A1/A2/A3/A4/A5/A6" (0 37))
                ("1/2/3/4/5" (37 0)))
            (directions (n -1 0) (e 0 1) (s 1 0) (w 0 -1) (next -1 0))
        )
        (grid
            (start-rectangle 406 369 442 405) ; top position
            (dimensions 
                ("B1/B2/B3/B4/B5/B6" (37 0))
                ("1/2/3/4/5" (0 -37)))
            (directions (w -1 0) (n 0 1) (e 1 0) (s 0 -1) (next 0 1))
        )
        (grid
            (start-rectangle 370 186 406 222) ; top position
            (dimensions 
                ("C1/C2/C3/C4/C5/C6" (0 -37))
                ("1/2/3/4/5" (-37 0)))
            (directions (s -1 0) (w 0 1) (n 1 0) (e 0 -1) (next 1 0))
        )
        (grid
            (start-rectangle 188 221 224 257) ; top position
            (dimensions 
                ("D1/D2/D3/D4/D5/D6" (-37 0))
                ("1/2/3/4/5" (0 37)))
            (directions (e -1 0) (s 0 1) (w 1 0) (n 0 -1) (next 0 -1))
        )
		(positions
			(CD 222 221 258 257)
			(OC 296 221 332 257)
			(BC 370 221 406 257)
			(OD 222 295 258 331)
			(OO 296 295 332 331)
			(OB 370 295 406 331)
			(AD 222 369 258 405) 
			(OA 296 369 332 405)
			(AB 370 369 406 405)
		)
	(links ne
		(A55 A44) (A44 A33) (A33 A22) (A22 A11)
		(A35 A24) (A24 A13)
		(A53 A42) (A42 A31)

		(B55 B44) (B44 B33) (B33 B22) (B22 B11)
		(B35 B24) (B24 B13)
		(B53 B42) (B42 B31)

		(C55 C44) (C44 C33) (C33 C22) (C22 C11)
		(C35 C24) (C24 C13)
		(C53 C42) (C42 C31)

		(D55 D44) (D44 D33) (D33 D22) (D22 D11)
		(D35 D24) (D24 D13)
		(D53 D42) (D42 D31)
	)
	(links nw
		(A51 A42) (A42 A33) (A33 A24) (A24 A15)
		(A53 A44) (A44 A35)
		(A31 A22) (A22 A13)

		(B51 B42) (B42 B33) (B33 B24) (B24 B15)
		(B53 B44) (B44 B35)
		(B31 B22) (B22 B13)

		(C51 C42) (C42 C33) (C33 C24) (C24 C15)
		(C53 C44) (C44 C35)
		(C31 C22) (C22 C13)

		(D51 D42) (D42 D33) (D33 D24) (D24 D15)
		(D53 D44) (D44 D35)
		(D31 D22) (D22 D13)
	)
	(links se
		(A13 A22) (A22 A31)
		(A15 A24) (A24 A33) (A33 A42) (A42 A51)
		(A35 A44) (A44 A53)

		(B13 B22) (B22 B31)
		(B15 B24) (B24 B33) (B33 B42) (B42 B51)
		(B35 B44) (B44 B53)

		(C13 C22) (C22 C31)
		(C15 C24) (C24 C33) (C33 C42) (C42 C51)
		(C35 C44) (C44 C53)

		(D13 D22) (D22 D31)
		(D15 D24) (D24 D33) (D33 D42) (D42 D51)
		(D35 D44) (D44 D53)
	)
	(links sw
		(A11 A22) (A22 A33) (A33 A44) (A44 A55)
		(A13 A24) (A24 A35)
		(A31 A42) (A42 A53)

		(B11 B22) (B22 B33) (B33 B44) (B44 B55)
		(B13 B24) (B24 B35)
		(B31 B42) (B42 B53)

		(C11 C22) (C22 C33) (C33 C44) (C44 C55)
		(C13 C24) (C24 C35)
		(C31 C42) (C42 C53)

		(D11 D22) (D22 D33) (D33 D44) (D44 D55)
		(D13 D24) (D24 D35)
		(D31 D42) (D42 D53)
	)
	(links Anw
		(A11 D15)
	)
	(links Ane
		(A15 B11)
	)
	(links Bnw
		(B15 C11)
	)
	(links Bsw
		(B11 A15)
	)
	(links Csw
		(C15 D11)
	)
	(links Cse
		(C11 B15)
	)
	(links Dse
		(D15 A11)
	)
	(links Dne
		(D11 C15)
	)
	(links n
		(AD OD) (OD CD)
		(OA OO) (OO OC)
		(AB OB) (OB BC)
		(A11 AD) (A13 OA) (A15 AB)
		(CD C15) (OC C13) (BC C11)
	)
	(links e
		(CD OC) (OC BC)
		(OD OO) (OO OB)
		(AD OA) (OA AB)
		(D11 CD) (D13 OD) (D15 AD)
		(BC B15) (OB B13) (AB B11)
	)
	(links s
		(CD OD) (OD AD)
		(OC OO) (OO OA)
		(BC OB) (OB AB)
		(C11 BC) (C13 OC) (C15 CD)
		(AB A15) (OA A13) (AD A11)
	)
	(links w
		(BC OC) (OC CD)
		(OB OO) (OO OD)
		(AB OA) (OA AD)
		(B11 AB) (B13 OB) (B15 BC)
		(AD D15) (OD D13) (CD D11)
	)
	(links next
		(AD OD) (OD CD)
		(OA OO) (OO OC)
		(AB OB) (OB BC)
		(A11 AD) (A13 OA) (A15 AB)
		(CD C15) (OC C13) (BC C11)
		(D61 D55) (D51 D45) (D41 D35) (D31 D25) (D21 D15) (D11 A61)
		(C65 A62) (A12 C14) (C64 A63) (C63 A64) (A14 C12) (C62 A65) (C61 B11)
		(B15 B21) (B25 B31) (B35 B41) (B45 B51) (B55 B61)
	)
        (zone
           (name highway)
           (players One Two)
           (positions (Ahighway) (Bhighway) (Chighway) (Dhighway) AB BC CD AD OA OB OC OD OO)
        )
        (zone
           (name bunker)
           (players One Two)
           (positions A22 A24 A33 A42 A44 B22 B24 B33 B42 B44 C22 C24 C33 C42 C44 D22 D24 D33 D42 D44)
        )
        (zone
           (name base)
           (players One Two)
           (positions A62 A64 B62 B64 C62 C64 D62 D64)
        )
        (zone
           (name junction)
           (players One Two)
           (positions A11 A15 B11 B15 C11 C15 D11 D15)
        )
        (zone
           (name myside)
           (players One Two)
           (positions A11)
        )
        (zone
           (name 1myside)
           (players One)
           (positions (Ahighway) A23 A32 A34 A43 A61 A62 A63 A64 A65)
        )
        (zone
           (name 1myside)
           (players Two)
           (positions (Bhighway) B23 B32 B34 B43 B61 B62 B63 B64 B65)
        )
        (zone
           (name 2myside)
           (players One)
           (positions (Chighway) C23 C32 C34 C43 C61 C62 C63 C64 C65)
        )
        (zone
           (name 2myside)
           (players Two)
           (positions (Dhighway) D23 D32 D34 D43 D61 D62 D63 D64 D65)
        )
        (zone
           (name 1first-rank)
           (players One)
           (positions A11 A12 A13 A14 A15)
        )
        (zone
           (name 1first-rank)
           (players Two)
           (positions B11 B12 B13 B14 B15)
        )
        (zone
           (name 2first-rank)
           (players One)
           (positions C11 C12 C13 C14 C15)
        )
        (zone
           (name 2first-rank)
           (players Two)
           (positions D11 D12 D13 D14 D15)
        )
        (zone
           (name 1base-2ranks)
           (players One)
           (positions A51 A52 A53 A54 A55 A61 A62 A63 A64 A65)
        )
        (zone
           (name 1base-2ranks)
           (players Two)
           (positions B51 B52 B53 B54 B55 B61 B62 B63 B64 B65)
        )
        (zone
           (name 2base-2ranks)
           (players One)
           (positions C51 C52 C53 C54 C55 C61 C62 C63 C64 C65)
        )
        (zone
           (name 2base-2ranks)
           (players Two)
           (positions D51 D52 D53 D54 D55 D61 D62 D63 D64 D65)
        )
        (zone
           (name base-2ranks)
           (players One Two)
           (positions A11)
        )
   )
   (board-setup
        (One 
		(1Marshal off 1)
		(1General off 1)
		(1MajGeneral off 2)
		(1Brigadier off 2)
		(1Colonel off 2)
		(1Major off 2)
		(1Captain off 3)
		(1Lieutenant off 3)
		(1Sapper off 3)
		(1Bomb off 2)
		(1Landmine off 3)
		(1Ensign off 1)
		(2Marshal off 1)
		(2General off 1)
		(2MajGeneral off 2)
		(2Brigadier off 2)
		(2Colonel off 2)
		(2Major off 2)
		(2Captain off 3)
		(2Lieutenant off 3)
		(2Sapper off 3)
		(2Bomb off 2)
		(2Landmine off 3)
		(2Ensign off 1))
        (Two 
		(1Marshal off 1)
		(1General off 1)
		(1MajGeneral off 2)
		(1Brigadier off 2)
		(1Colonel off 2)
		(1Major off 2)
		(1Captain off 3)
		(1Lieutenant off 3)
		(1Sapper off 3)
		(1Bomb off 2)
		(1Landmine off 3)
		(1Ensign off 1)
		(2Marshal off 1)
		(2General off 1)
		(2MajGeneral off 2)
		(2Brigadier off 2)
		(2Colonel off 2)
		(2Major off 2)
		(2Captain off 3)
		(2Lieutenant off 3)
		(2Sapper off 3)
		(2Bomb off 2)
		(2Landmine off 3)
		(2Ensign off 1))
   )
   (piece
        (name 1Bomb)
		(help "Sacrifice itself with any other pieces regardless their ranks")
		(image One "images\Army_Chess\B00.bmp"
		       Two "images\Army_Chess\G00.bmp")
        (drops (move-type 1MineBombSetup) (00begin-setup1))
        (moves (move-type 1Move)
               (00slidej1 n Ane e)
               (00slidej1 n Anw w)
               (00slidej1 e Dne n)
               (00slidej1 e Dse s)
               (00slidej1 s Cse e)
               (00slidej1 s Csw w)
               (00slidej1 w Bnw n)
               (00slidej1 w Bsw s)
               (00slide1 n)
               (00slide1 e)
               (00slide1 s)
               (00slide1 w)
               (00shift1 n)
               (00shift1 e)
               (00shift1 s)
               (00shift1 w)
               (00shift1 ne)
               (00shift1 nw)
               (00shift1 se)
               (00shift1 sw)
        )
   )
   (piece
        (name 1Marshal)
		(help "2nd Largest piece type")
		(image One "images\Army_Chess\B40.bmp"
		       Two "images\Army_Chess\G40.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (40slidej1 n Ane e)
               (40slidej1 n Anw w)
               (40slidej1 e Dne n)
               (40slidej1 e Dse s)
               (40slidej1 s Cse e)
               (40slidej1 s Csw w)
               (40slidej1 w Bnw n)
               (40slidej1 w Bsw s)
               (40slide1 n)
               (40slide1 e)
               (40slide1 s)
               (40slide1 w)
               (40shift1 n)
               (40shift1 e)
               (40shift1 s)
               (40shift1 w)
               (40shift1 ne)
               (40shift1 nw)
               (40shift1 se)
               (40shift1 sw)
        )
   )
   (piece
        (name 1General)
		(help "3nd Largest piece type")
		(image One "images\Army_Chess\B39.bmp"
		       Two "images\Army_Chess\G39.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (39slidej1 n Ane e)
               (39slidej1 n Anw w)
               (39slidej1 e Dne n)
               (39slidej1 e Dse s)
               (39slidej1 s Cse e)
               (39slidej1 s Csw w)
               (39slidej1 w Bnw n)
               (39slidej1 w Bsw s)
               (39slide1 n)
               (39slide1 e)
               (39slide1 s)
               (39slide1 w)
               (39shift1 n)
               (39shift1 e)
               (39shift1 s)
               (39shift1 w)
               (39shift1 ne)
               (39shift1 nw)
               (39shift1 se)
               (39shift1 sw)
        )
   )
   (piece
        (name 1MajGeneral)
		(help "4rd Largest piece type")
		(image One "images\Army_Chess\B38.bmp"
		       Two "images\Army_Chess\G38.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (38slidej1 n Ane e)
               (38slidej1 n Anw w)
               (38slidej1 e Dne n)
               (38slidej1 e Dse s)
               (38slidej1 s Cse e)
               (38slidej1 s Csw w)
               (38slidej1 w Bnw n)
               (38slidej1 w Bsw s)
               (38slide1 n)
               (38slide1 e)
               (38slide1 s)
               (38slide1 w)
               (38shift1 n)
               (38shift1 e)
               (38shift1 s)
               (38shift1 w)
               (38shift1 ne)
               (38shift1 nw)
               (38shift1 se)
               (38shift1 sw)
        )
   )
   (piece
        (name 1Brigadier)
		(help "5th Largest piece type")
		(image One "images\Army_Chess\B37.bmp"
		       Two "images\Army_Chess\G37.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (37slidej1 n Ane e)
               (37slidej1 n Anw w)
               (37slidej1 e Dne n)
               (37slidej1 e Dse s)
               (37slidej1 s Cse e)
               (37slidej1 s Csw w)
               (37slidej1 w Bnw n)
               (37slidej1 w Bsw s)
               (37slide1 n)
               (37slide1 e)
               (37slide1 s)
               (37slide1 w)
               (37shift1 n)
               (37shift1 e)
               (37shift1 s)
               (37shift1 w)
               (37shift1 ne)
               (37shift1 nw)
               (37shift1 se)
               (37shift1 sw)
        )
   )
   (piece
        (name 1Colonel)
		(help "6th Largest piece type")
		(image One "images\Army_Chess\B36.bmp"
		       Two "images\Army_Chess\G36.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (36slidej1 n Ane e)
               (36slidej1 n Anw w)
               (36slidej1 e Dne n)
               (36slidej1 e Dse s)
               (36slidej1 s Cse e)
               (36slidej1 s Csw w)
               (36slidej1 w Bnw n)
               (36slidej1 w Bsw s)
               (36slide1 n)
               (36slide1 e)
               (36slide1 s)
               (36slide1 w)
               (36shift1 n)
               (36shift1 e)
               (36shift1 s)
               (36shift1 w)
               (36shift1 ne)
               (36shift1 nw)
               (36shift1 se)
               (36shift1 sw)
        )
   )
   (piece
        (name 1Major)
		(help "7th Largest piece type")
		(image One "images\Army_Chess\B35.bmp"
		       Two "images\Army_Chess\G35.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (35slidej1 n Ane e)
               (35slidej1 n Anw w)
               (35slidej1 e Dne n)
               (35slidej1 e Dse s)
               (35slidej1 s Cse e)
               (35slidej1 s Csw w)
               (35slidej1 w Bnw n)
               (35slidej1 w Bsw s)
               (35slide1 n)
               (35slide1 e)
               (35slide1 s)
               (35slide1 w)
               (35shift1 n)
               (35shift1 e)
               (35shift1 s)
               (35shift1 w)
               (35shift1 ne)
               (35shift1 nw)
               (35shift1 se)
               (35shift1 sw)
        )
   )
   (piece
        (name 1Captain)
		(help "8th Largest piece type")
		(image One "images\Army_Chess\B34.bmp"
		       Two "images\Army_Chess\G34.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (34slidej1 n Ane e)
               (34slidej1 n Anw w)
               (34slidej1 e Dne n)
               (34slidej1 e Dse s)
               (34slidej1 s Cse e)
               (34slidej1 s Csw w)
               (34slidej1 w Bnw n)
               (34slidej1 w Bsw s)
               (34slide1 n)
               (34slide1 e)
               (34slide1 s)
               (34slide1 w)
               (34shift1 n)
               (34shift1 e)
               (34shift1 s)
               (34shift1 w)
               (34shift1 ne)
               (34shift1 nw)
               (34shift1 se)
               (34shift1 sw)
        )
   )
   (piece
        (name 1Lieutenant)
		(help "9th Largest piece type")
		(image One "images\Army_Chess\B33.bmp"
		       Two "images\Army_Chess\G33.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (33slidej1 n Ane e)
               (33slidej1 n Anw w)
               (33slidej1 e Dne n)
               (33slidej1 e Dse s)
               (33slidej1 s Cse e)
               (33slidej1 s Csw w)
               (33slidej1 w Bnw n)
               (33slidej1 w Bsw s)
               (33slide1 n)
               (33slide1 e)
               (33slide1 s)
               (33slide1 w)
               (33shift1 n)
               (33shift1 e)
               (33shift1 s)
               (33shift1 w)
               (33shift1 ne)
               (33shift1 nw)
               (33shift1 se)
               (33shift1 sw)
        )
   )
   (piece
        (name 1Sapper)
		(help "Smallest piece type, but can take Landmine and change direction on highway")
		(image One "images\Army_Chess\B32.bmp"
		       Two "images\Army_Chess\G32.bmp")
        (drops (move-type 1Setup) (begin-setup1))
        (moves (move-type 1Move)
               (32slidej1 n Ane e)
               (32slidej1 n Anw w)
               (32slidej1 e Dne n)
               (32slidej1 e Dse s)
               (32slidej1 s Cse e)
               (32slidej1 s Csw w)
               (32slidej1 w Bnw n)
               (32slidej1 w Bsw s)
               (32slide1 n)
               (32slide1 e)
               (32slide1 s)
               (32slide1 w)
               (32shift1 n)
               (32shift1 e)
               (32shift1 s)
               (32shift1 w)
               (32shift1 ne)
               (32shift1 nw)
               (32shift1 se)
               (32shift1 sw)
               (move-type SapperSlide)
               (a32slidej1 n Ane e)
               (a32slidej1 n Anw w)
               (a32slidej1 e Dne n)
               (a32slidej1 e Dse s)
               (a32slidej1 s Cse e)
               (a32slidej1 s Csw w)
               (a32slidej1 w Bnw n)
               (a32slidej1 w Bsw s)
               (a32slide1 n)
               (a32slide1 e)
               (a32slide1 s)
               (a32slide1 w)
        )
   )
   (piece
        (name 1Landmine)
		(help "Largest piece type, but cannot move, and can be taken by a Sapper")
		(image One "images\Army_Chess\B31.bmp"
		       Two "images\Army_Chess\G31.bmp")
        (drops (move-type 1MineBombSetup) (31begin-setup1))
   )
   (piece
        (name 1Ensign)
		(help "The Royal piece, any pieces can take it")
		(image One "images\Army_Chess\B41.bmp"
		       Two "images\Army_Chess\G41.bmp")
        (drops (move-type 1EnsignSetup) (41begin-setup1))
   )
   (piece
        (name 2Bomb)
		(help "Sacrifice itself with any other pieces regardless their ranks")
		(image One "images\Army_Chess\P00.bmp"
		       Two "images\Army_Chess\O00.bmp")
        (drops (move-type 2MineBombSetup) (00begin-setup2))
        (moves (move-type 2Move)
               (00slidej1 n Ane e)
               (00slidej1 n Anw w)
               (00slidej1 e Dne n)
               (00slidej1 e Dse s)
               (00slidej1 s Cse e)
               (00slidej1 s Csw w)
               (00slidej1 w Bnw n)
               (00slidej1 w Bsw s)
               (00slide1 n)
               (00slide1 e)
               (00slide1 s)
               (00slide1 w)
               (00shift1 n)
               (00shift1 e)
               (00shift1 s)
               (00shift1 w)
               (00shift1 ne)
               (00shift1 nw)
               (00shift1 se)
               (00shift1 sw)
        )
   )
   (piece
        (name 2Marshal)
		(help "2nd Largest piece type")
		(image One "images\Army_Chess\P40.bmp"
		       Two "images\Army_Chess\O40.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (40slidej1 n Ane e)
               (40slidej1 n Anw w)
               (40slidej1 e Dne n)
               (40slidej1 e Dse s)
               (40slidej1 s Cse e)
               (40slidej1 s Csw w)
               (40slidej1 w Bnw n)
               (40slidej1 w Bsw s)
               (40slide1 n)
               (40slide1 e)
               (40slide1 s)
               (40slide1 w)
               (40shift1 n)
               (40shift1 e)
               (40shift1 s)
               (40shift1 w)
               (40shift1 ne)
               (40shift1 nw)
               (40shift1 se)
               (40shift1 sw)
        )
   )
   (piece
        (name 2General)
		(help "3nd Largest piece type")
		(image One "images\Army_Chess\P39.bmp"
		       Two "images\Army_Chess\O39.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (39slidej1 n Ane e)
               (39slidej1 n Anw w)
               (39slidej1 e Dne n)
               (39slidej1 e Dse s)
               (39slidej1 s Cse e)
               (39slidej1 s Csw w)
               (39slidej1 w Bnw n)
               (39slidej1 w Bsw s)
               (39slide1 n)
               (39slide1 e)
               (39slide1 s)
               (39slide1 w)
               (39shift1 n)
               (39shift1 e)
               (39shift1 s)
               (39shift1 w)
               (39shift1 ne)
               (39shift1 nw)
               (39shift1 se)
               (39shift1 sw)
        )
   )
   (piece
        (name 2MajGeneral)
		(help "4rd Largest piece type")
		(image One "images\Army_Chess\P38.bmp"
		       Two "images\Army_Chess\O38.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (38slidej1 n Ane e)
               (38slidej1 n Anw w)
               (38slidej1 e Dne n)
               (38slidej1 e Dse s)
               (38slidej1 s Cse e)
               (38slidej1 s Csw w)
               (38slidej1 w Bnw n)
               (38slidej1 w Bsw s)
               (38slide1 n)
               (38slide1 e)
               (38slide1 s)
               (38slide1 w)
               (38shift1 n)
               (38shift1 e)
               (38shift1 s)
               (38shift1 w)
               (38shift1 ne)
               (38shift1 nw)
               (38shift1 se)
               (38shift1 sw)
        )
   )
   (piece
        (name 2Brigadier)
		(help "5th Largest piece type")
		(image One "images\Army_Chess\P37.bmp"
		       Two "images\Army_Chess\O37.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (37slidej1 n Ane e)
               (37slidej1 n Anw w)
               (37slidej1 e Dne n)
               (37slidej1 e Dse s)
               (37slidej1 s Cse e)
               (37slidej1 s Csw w)
               (37slidej1 w Bnw n)
               (37slidej1 w Bsw s)
               (37slide1 n)
               (37slide1 e)
               (37slide1 s)
               (37slide1 w)
               (37shift1 n)
               (37shift1 e)
               (37shift1 s)
               (37shift1 w)
               (37shift1 ne)
               (37shift1 nw)
               (37shift1 se)
               (37shift1 sw)
        )
   )
   (piece
        (name 2Colonel)
		(help "6th Largest piece type")
		(image One "images\Army_Chess\P36.bmp"
		       Two "images\Army_Chess\O36.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (36slidej1 n Ane e)
               (36slidej1 n Anw w)
               (36slidej1 e Dne n)
               (36slidej1 e Dse s)
               (36slidej1 s Cse e)
               (36slidej1 s Csw w)
               (36slidej1 w Bnw n)
               (36slidej1 w Bsw s)
               (36slide1 n)
               (36slide1 e)
               (36slide1 s)
               (36slide1 w)
               (36shift1 n)
               (36shift1 e)
               (36shift1 s)
               (36shift1 w)
               (36shift1 ne)
               (36shift1 nw)
               (36shift1 se)
               (36shift1 sw)
        )
   )
   (piece
        (name 2Major)
		(help "7th Largest piece type")
		(image One "images\Army_Chess\P35.bmp"
		       Two "images\Army_Chess\O35.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (35slidej1 n Ane e)
               (35slidej1 n Anw w)
               (35slidej1 e Dne n)
               (35slidej1 e Dse s)
               (35slidej1 s Cse e)
               (35slidej1 s Csw w)
               (35slidej1 w Bnw n)
               (35slidej1 w Bsw s)
               (35slide1 n)
               (35slide1 e)
               (35slide1 s)
               (35slide1 w)
               (35shift1 n)
               (35shift1 e)
               (35shift1 s)
               (35shift1 w)
               (35shift1 ne)
               (35shift1 nw)
               (35shift1 se)
               (35shift1 sw)
        )
   )
   (piece
        (name 2Captain)
		(help "8th Largest piece type")
		(image One "images\Army_Chess\P34.bmp"
		       Two "images\Army_Chess\O34.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (34slidej1 n Ane e)
               (34slidej1 n Anw w)
               (34slidej1 e Dne n)
               (34slidej1 e Dse s)
               (34slidej1 s Cse e)
               (34slidej1 s Csw w)
               (34slidej1 w Bnw n)
               (34slidej1 w Bsw s)
               (34slide1 n)
               (34slide1 e)
               (34slide1 s)
               (34slide1 w)
               (34shift1 n)
               (34shift1 e)
               (34shift1 s)
               (34shift1 w)
               (34shift1 ne)
               (34shift1 nw)
               (34shift1 se)
               (34shift1 sw)
        )
   )
   (piece
        (name 2Lieutenant)
		(help "9th Largest piece type")
		(image One "images\Army_Chess\P33.bmp"
		       Two "images\Army_Chess\O33.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (33slidej1 n Ane e)
               (33slidej1 n Anw w)
               (33slidej1 e Dne n)
               (33slidej1 e Dse s)
               (33slidej1 s Cse e)
               (33slidej1 s Csw w)
               (33slidej1 w Bnw n)
               (33slidej1 w Bsw s)
               (33slide1 n)
               (33slide1 e)
               (33slide1 s)
               (33slide1 w)
               (33shift1 n)
               (33shift1 e)
               (33shift1 s)
               (33shift1 w)
               (33shift1 ne)
               (33shift1 nw)
               (33shift1 se)
               (33shift1 sw)
        )
   )
   (piece
        (name 2Sapper)
		(help "Smallest piece type, but can take Landmine and change direction on highway")
		(image One "images\Army_Chess\P32.bmp"
		       Two "images\Army_Chess\O32.bmp")
        (drops (move-type 2Setup) (begin-setup2))
        (moves (move-type 2Move)
               (32slidej1 n Ane e)
               (32slidej1 n Anw w)
               (32slidej1 e Dne n)
               (32slidej1 e Dse s)
               (32slidej1 s Cse e)
               (32slidej1 s Csw w)
               (32slidej1 w Bnw n)
               (32slidej1 w Bsw s)
               (32slide1 n)
               (32slide1 e)
               (32slide1 s)
               (32slide1 w)
               (32shift1 n)
               (32shift1 e)
               (32shift1 s)
               (32shift1 w)
               (32shift1 ne)
               (32shift1 nw)
               (32shift1 se)
               (32shift1 sw)
               (move-type SapperSlide)
               (a32slidej1 n Ane e)
               (a32slidej1 n Anw w)
               (a32slidej1 e Dne n)
               (a32slidej1 e Dse s)
               (a32slidej1 s Cse e)
               (a32slidej1 s Csw w)
               (a32slidej1 w Bnw n)
               (a32slidej1 w Bsw s)
               (a32slide1 n)
               (a32slide1 e)
               (a32slide1 s)
               (a32slide1 w)
        )
   )
   (piece
        (name 2Landmine)
		(help "Largest piece type, but cannot move, and can be taken by a Sapper")
		(image One "images\Army_Chess\P31.bmp"
		       Two "images\Army_Chess\O31.bmp")
        (drops (move-type 2MineBombSetup) (31begin-setup2))
   )
   (piece
        (name 2Ensign)
		(help "The Royal piece, any pieces can take it")
		(image One "images\Army_Chess\P41.bmp"
		       Two "images\Army_Chess\O41.bmp")
        (drops (move-type 2EnsignSetup) (41begin-setup2))
   )
   (piece (name Bomb))
   (piece (name Marshal))
   (piece (name General))
   (piece (name MajGeneral))
   (piece (name Brigadier))
   (piece (name Colonel))
   (piece (name Major))
   (piece (name Captain))
   (piece (name Lieutenant))
   (piece (name Sapper))
   (piece (name Landmine))
   (piece (name Ensign))

    (loss-condition (One Two) (and (pieces-remaining 0 1Ensign) (pieces-remaining 0 2Ensign)) )
    (loss-condition (One Two) repetition)
)